;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.03.4 Standard
;Automatic Program Generator
;© Copyright 1998-2008 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 1/5/2014
;Author  :
;Company :
;Comments:
;
;
;Chip type           : ATmega8
;Program type        : Application
;Clock frequency     : 4.000000 MHz
;Memory model        : Small
;External RAM size   : 0
;Data Stack size     : 256
;*****************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;
;//ULTRASONIC1
;#define IN1          PINB.1
;#define OUT1         PINB.2
;#define DDRIN1       DDRB.1
;#define DDROUT1      DDRB.2
;
;//ULTRASONIC2
;#define IN2          PINB.3
;#define OUT2         PINC.0
;#define DDRIN2       DDRB.3
;#define DDROUT2      DDRC.0
;
;//ULTRASONIC3
;#define IN3          PINC.1
;#define OUT3         PINC.2
;#define DDRIN3       DDRC.1
;#define DDROUT3      DDRC.2
;
;//ULTRASONIC4
;#define IN4          PINC.3
;#define OUT4         PINC.4
;#define DDRIN4       DDRC.3
;#define DDROUT4      DDRC.4
;
;//ULTRASONIC5
;#define IN5          PINC.5
;#define OUT5         PIND.2
;#define DDRIN5       DDRC.5
;#define DDROUT5      DDRD.2
;
;//ULTRASONIC6
;#define IN6          PIND.3
;#define OUT6         PIND.4
;#define DDRIN6       DDRD.3
;#define DDROUT6      DDRD.4
;
;//ULTRASONIC7
;#define IN7          PIND.5
;#define OUT7         PIND.6
;#define DDRIN7       DDRD.5
;#define DDROUT7      DDRD.6
;
;//ULTRASONIC8
;#define IN8          PIND.7
;#define OUT8         PINB.0
;#define DDRIN8       DDRD.7
;#define DDROUT8      DDRB.0
;
;// Declare your global variables here
;int data,data1;
;#define x  8
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0052 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0053    #asm("cli");
;PCODE: $0000000F VOL: 0
	cli
;PCODE: $00000010 VOL: 0
; 0000 0054    TCNT0=254;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0055 //  TCCR0B&=0xFB;
; 0000 0056 }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;void ultrasonik1(void){//+++++++++++++++++++ scan us1 +++++++++++++++++++++++++++++++++
; 0000 0057 void ultrasonik1(void){
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0058   DDRIN1=1;                                // pin echo diset sebagai input & triger sebagai output
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0059   IN1=0;                                   // Set Pulse trigger High
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 005A   delay_us(10);                            // 10 uS Delay
;PCODE: $0000001C VOL: 0
; 0000 005B   IN1=1;                                   // Set Pulse trigger High
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 005C   delay_us(10);                            // 10 uS Delay
;PCODE: $0000001F VOL: 0
; 0000 005D   OUT1=0;                                  // Set Pulse trigger Low
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 005E   PORTB=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 005F   DDRB=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0060   while(OUT1==0){};                        // Tunggu hingga pin echo menjadi 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0061   #asm("sei")
;PCODE: $0000002C VOL: 0
	sei
;PCODE: $0000002D VOL: 0
; 0000 0062   TCCR0|=0x04;                            // timer0 start
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0063   while(OUT1==1 && TCCR0==0x04){};        // Tunggu hingga pin echo menjadi 1
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0064   TCCR0=0x00;                             // timer0 stop
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0065   data=TCNT0;                              // Konversi data TCNT0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0066   putchar(data);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0067   delay_ms(x);                             // Tunggu 10 mS
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0068   TCNT0=0;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0069 }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;
;void ultrasonik2(void){//+++++++++++++++++++ scan us2 +++++++++++++++++++++++++++++++++
; 0000 006B void ultrasonik2(void){
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 006C   DDRIN2=1;                                // pin echo diset sebagai input & triger sebagai output
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 006D   IN2=0;                                   // Set Pulse trigger High
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 006E   delay_us(10);                            // 10 uS Delay
;PCODE: $00000054 VOL: 0
; 0000 006F   IN2=1;                                   // Set Pulse trigger High
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0070   delay_us(10);                            // 10 uS Delay
;PCODE: $00000057 VOL: 0
; 0000 0071   OUT2=0;                                  // Set Pulse trigger Low
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0072   PORTB=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0073   DDRB=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0074   while(OUT2==0){};                        // Tunggu hingga pin echo menjadi 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0075   #asm("sei")
;PCODE: $00000064 VOL: 0
	sei
;PCODE: $00000065 VOL: 0
; 0000 0076   TCCR0|=0x04;                            // timer0 start
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0077   while(OUT2==1 && TCCR0==0x04){};        // Tunggu hingga pin echo menjadi 1
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0078   TCCR0=0x00;                             // timer0 stop
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0079   data=TCNT0;                              // Konversi data TCNT0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 007A   putchar(data);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 007B   delay_ms(x);                             // Tunggu 10 mS
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 007C   TCNT0=0;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 007D }
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;void ultrasonik3(void){//+++++++++++++++++++ scan us3 +++++++++++++++++++++++++++++++++
; 0000 007E void ultrasonik3(void){
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 007F   DDRIN3=1;                                // pin echo diset sebagai input & triger sebagai output
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0080   IN3=0;                                   // Set Pulse trigger High
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0081   delay_us(10);                            // 10 uS Delay
;PCODE: $0000008C VOL: 0
; 0000 0082   IN3=1;                                   // Set Pulse trigger High
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0083   delay_us(10);                            // 10 uS Delay
;PCODE: $0000008F VOL: 0
; 0000 0084   OUT3=0;                                  // Set Pulse trigger Low
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0085   PORTC=0x00;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0086   DDRC=0x00;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0087   while(OUT3==0){};                        // Tunggu hingga pin echo menjadi 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0088   #asm("sei")
;PCODE: $0000009C VOL: 0
	sei
;PCODE: $0000009D VOL: 0
; 0000 0089   TCCR0|=0x04;                            // timer0 start
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 008A   while(OUT3==1 && TCCR0==0x04){};        // Tunggu hingga pin echo menjadi 1
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 008B   TCCR0=0x00;                             // timer0 stop
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 008C   data=TCNT0;                              // Konversi data TCNT0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 008D   putchar(data);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 008E   delay_ms(x);                             // Tunggu 10 mS
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 008F   TCNT0=0;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0090 }
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;void ultrasonik4(void){//+++++++++++++++++++ scan us4 +++++++++++++++++++++++++++++++++
; 0000 0091 void ultrasonik4(void){
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0092   DDRIN4=1;                                // pin echo diset sebagai input & triger sebagai output
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0093   IN4=0;                                   // Set Pulse trigger High
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0094   delay_us(10);                            // 10 uS Delay
;PCODE: $000000C4 VOL: 0
; 0000 0095   IN4=1;                                   // Set Pulse trigger High
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0096   delay_us(10);                            // 10 uS Delay
;PCODE: $000000C7 VOL: 0
; 0000 0097   OUT4=0;                                  // Set Pulse trigger Low
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0098   PORTC=0x00;
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0099   DDRC=0x00;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 009A   while(OUT4==0){};                        // Tunggu hingga pin echo menjadi 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 009B   #asm("sei")
;PCODE: $000000D4 VOL: 0
	sei
;PCODE: $000000D5 VOL: 0
; 0000 009C   TCCR0|=0x04;                            // timer0 start
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 009D   while(OUT4==1 && TCCR0==0x04){};        // Tunggu hingga pin echo menjadi 1
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 009E   TCCR0=0x00;                             // timer0 stop
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 009F   data=TCNT0;                              // Konversi data TCNT0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 00A0   putchar(data);
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00A1   delay_ms(x);                             // Tunggu 10 mS
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 00A2   TCNT0=0;
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00A3 }
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;void ultrasonik5(void){//+++++++++++++++++++ scan us5 +++++++++++++++++++++++++++++++++
; 0000 00A4 void ultrasonik5(void){
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 00A5   DDRIN5=1;                                // pin echo diset sebagai input & triger sebagai output
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00A6   IN5=0;                                   // Set Pulse trigger High
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 00A7   delay_us(10);                            // 10 uS Delay
;PCODE: $000000FC VOL: 0
; 0000 00A8   IN5=1;                                   // Set Pulse trigger High
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00A9   delay_us(10);                            // 10 uS Delay
;PCODE: $000000FF VOL: 0
; 0000 00AA   OUT5=0;                                  // Set Pulse trigger Low
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 00AB   PORTC=0x00;
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00AC   DDRC=0x00;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00AD   while(OUT5==0){};                        // Tunggu hingga pin echo menjadi 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00AE   #asm("sei")
;PCODE: $0000010C VOL: 0
	sei
;PCODE: $0000010D VOL: 0
; 0000 00AF   TCCR0|=0x04;                            // timer0 start
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00B0   while(OUT5==1 && TCCR0==0x04){};        // Tunggu hingga pin echo menjadi 1
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00B1   TCCR0=0x00;                             // timer0 stop
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00B2   data=TCNT0;                              // Konversi data TCNT0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00B3   putchar(data);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00B4   delay_ms(x);                             // Tunggu 10 mS
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00B5   TCNT0=0;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00B6 }
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;void ultrasonik6(void){//+++++++++++++++++++ scan us0 +++++++++++++++++++++++++++++++++
; 0000 00B7 void ultrasonik6(void){
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00B8   DDRIN6=1;                                // pin echo diset sebagai input & triger sebagai output
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00B9   IN6=0;                                   // Set Pulse trigger High
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00BA   delay_us(10);                            // 10 uS Delay
;PCODE: $00000134 VOL: 0
; 0000 00BB   IN6=1;                                   // Set Pulse trigger High
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00BC   delay_us(10);                            // 10 uS Delay
;PCODE: $00000137 VOL: 0
; 0000 00BD   OUT6=0;                                  // Set Pulse trigger Low
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00BE   PORTD=0x00;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00BF   DDRD=0x00;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00C0   while(OUT6==0){};                        // Tunggu hingga pin echo menjadi 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00C1   #asm("sei")
;PCODE: $00000144 VOL: 0
	sei
;PCODE: $00000145 VOL: 0
; 0000 00C2   TCCR0|=0x04;                            // timer0 start
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00C3   while(OUT6==1 && TCCR0==0x04){};        // Tunggu hingga pin echo menjadi 1
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00C4   TCCR0=0x00;                             // timer0 stop
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00C5   data=TCNT0;                              // Konversi data TCNT0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00C6   putchar(data);
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00C7   delay_ms(x);                             // Tunggu 10 mS
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 00C8   TCNT0=0;
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00C9 }
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;/*void ultrasonik7(void){//+++++++++++++++++++ scan us0 +++++++++++++++++++++++++++++++++
;  DDRIN7=1;                                // pin echo diset sebagai input & triger sebagai output
;  IN7=0;                                   // Set Pulse trigger High
;  delay_us(10);                            // 10 uS Delay
;  IN7=1;                                   // Set Pulse trigger High
;  delay_us(10);                            // 10 uS Delay
;  OUT7=0;                                  // Set Pulse trigger Low
;  PORTD=0x00;
;  DDRD=0x00;
;  while(OUT7==0){};                        // Tunggu hingga pin echo menjadi 0
;  #asm("sei")
;  TCCR0|=0x04;                            // timer0 start
;  while(OUT7==1 && TCCR0==0x04){};        // Tunggu hingga pin echo menjadi 1
;  TCCR0=0x00;                             // timer0 stop
;  data=TCNT0;                              // Konversi data TCNT0
;  putchar(data);
;  delay_ms(x);                            // Tunggu 10 mS
;  TCNT0=0;
;}*/
;
;/*void ultrasonik8(void){//+++++++++++++++++++ scan us0 +++++++++++++++++++++++++++++++++
;  DDRIN8=1;                                // pin echo diset sebagai input & triger sebagai output
;  IN8=0;                                   // Set Pulse trigger High
;  delay_us(10);                            // 10 uS Delay
;  IN8=1;                                   // Set Pulse trigger High
;  delay_us(10);                            // 10 uS Delay
;  OUT8=0;                                  // Set Pulse trigger Low
;  PORTD=0x00;
;  DDRD=0x00;
;  while(OUT8==0){};                        // Tunggu hingga pin echo menjadi 0
;  #asm("sei")
;  TCCR0|=0x04;                            // timer0 start
;  while(OUT8==1 && TCCR0==0x04){};        // Tunggu hingga pin echo menjadi 1
;  TCCR0=0x00;                             // timer0 stop
;  data=TCNT0;                              // Konversi data TCNT0
;  putchar(data);
;  delay_ms(x);                            // Tunggu 10 mS
;  TCNT0=0;
;}*/
;
;
;void main(void)
; 0000 00F4 {
;PCODE: $00000166 VOL: 0
; 0000 00F5 // Declare your local variables here
; 0000 00F6 
; 0000 00F7 // Input/Output Ports initialization
; 0000 00F8 // Port B initialization
; 0000 00F9 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00FA // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 00FB PORTB=0x00;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00FC DDRB=0x00;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00FD 
; 0000 00FE // Port C initialization
; 0000 00FF // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0100 // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0101 PORTC=0x00;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 0102 DDRC=0x00;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0103 
; 0000 0104 // Port D initialization
; 0000 0105 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0106 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0107 PORTD=0x00;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 0108 DDRD=0x00;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0109 
; 0000 010A // Timer/Counter 0 initialization
; 0000 010B // Clock source: System Clock
; 0000 010C // Clock value: Timer 0 Stopped
; 0000 010D TCCR0=0x00;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 010E TCNT0=0x00;
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 010F 
; 0000 0110 // Timer/Counter 1 initialization
; 0000 0111 // Clock source: System Clock
; 0000 0112 // Clock value: Timer 1 Stopped
; 0000 0113 // Mode: Normal top=FFFFh
; 0000 0114 // OC1A output: Discon.
; 0000 0115 // OC1B output: Discon.
; 0000 0116 // Noise Canceler: Off
; 0000 0117 // Input Capture on Falling Edge
; 0000 0118 // Timer 1 Overflow Interrupt: Off
; 0000 0119 // Input Capture Interrupt: Off
; 0000 011A // Compare A Match Interrupt: Off
; 0000 011B // Compare B Match Interrupt: Off
; 0000 011C TCCR1A=0x00;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 011D TCCR1B=0x00;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 011E TCNT1H=0x00;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 011F TCNT1L=0x00;
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 0120 ICR1H=0x00;
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 0121 ICR1L=0x00;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 0122 OCR1AH=0x00;
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0123 OCR1AL=0x00;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 0124 OCR1BH=0x00;
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 0125 OCR1BL=0x00;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 0126 
; 0000 0127 // Timer/Counter 2 initialization
; 0000 0128 // Clock source: System Clock
; 0000 0129 // Clock value: Timer 2 Stopped
; 0000 012A // Mode: Normal top=FFh
; 0000 012B // OC2 output: Disconnected
; 0000 012C ASSR=0x00;
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 012D TCCR2=0x00;
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 012E TCNT2=0x00;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 012F OCR2=0x00;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0130 
; 0000 0131 // External Interrupt(s) initialization
; 0000 0132 // INT0: Off
; 0000 0133 // INT1: Off
; 0000 0134 MCUCR=0x00;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0135 
; 0000 0136 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0137 TIMSK=0x00;
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 0138 
; 0000 0139 // USART initialization
; 0000 013A // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 013B // USART Receiver: Off
; 0000 013C // USART Transmitter: On
; 0000 013D // USART Mode: Asynchronous
; 0000 013E // USART Baud Rate: 9600
; 0000 013F UCSRA=0x00;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 0140 UCSRB=0x08;
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 0141 UCSRC=0x86;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 0142 UBRRH=0x00;
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 0143 UBRRL=0x19;
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 0144 
; 0000 0145 // Analog Comparator initialization
; 0000 0146 // Analog Comparator: Off
; 0000 0147 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0148 ACSR=0x80;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 0149 SFIOR=0x00;
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 014A 
; 0000 014B delay_ms(1500);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 014C 
; 0000 014D while (1)
;PCODE: $000001A8 VOL: 0
; 0000 014E       {
; 0000 014F       // Place your code here
; 0000 0150       ultrasonik1();  //us1
;PCODE: $000001A9 VOL: 0
; 0000 0151       ultrasonik2();  //us2
;PCODE: $000001AA VOL: 0
; 0000 0152       ultrasonik3();  //us3
;PCODE: $000001AB VOL: 0
; 0000 0153       ultrasonik4();  //us4
;PCODE: $000001AC VOL: 0
; 0000 0154       ultrasonik5();  //us5
;PCODE: $000001AD VOL: 0
; 0000 0155       ultrasonik6();  //us6
;PCODE: $000001AE VOL: 0
; 0000 0156       //ultrasonik7();  //us7
; 0000 0157       //ultrasonik8();  //us8
; 0000 0158 
; 0000 0159 
; 0000 015A 
; 0000 015B       /*putchar(1);delay_ms(10);
; 0000 015C       putchar(2);delay_ms(10);
; 0000 015D       putchar(3);delay_ms(10);
; 0000 015E       putchar(4);delay_ms(10);
; 0000 015F       putchar(5);delay_ms(10);
; 0000 0160       putchar(6);delay_ms(10);
; 0000 0161       putchar(7);delay_ms(10);
; 0000 0162       putchar(8);delay_ms(10); */
; 0000 0163       };
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 0164 }
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;
